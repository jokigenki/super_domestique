<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_reverse_car</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init vars

// initial and reset positions
carStartX = display_get_width() + 10;
x = carStartX;
y = obj_generator.groundHeight + 3;

// whether or not to generate the car
shouldGenerate = true;

// how many frames between each car instance
carAppearMinFrames = 150;
carAppearMaxFrames = 300;
carCountdownTimer = round(random_range(carAppearMinFrames, carAppearMaxFrames));

// how fast the car should go, relative to the road speed
carMinSpeed = 1;
carMaxSpeed = 5;
carSpeedX = round(random_range(carMinSpeed, carMaxSpeed));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Countdown and maintain car state
if (carCountdownTimer &gt; 0) carCountdownTimer--;

if (carCountdownTimer == 0) {
    x -= (carSpeedX + obj_generator.blockMoveSpeed);
    
    // if car has left edge of screen, reset car and restart countdown
    if (x &lt; -sprite_get_width(sp_reverse_car)) {
        if (!shouldGenerate) exit;
        carCountdownTimer = round(random_range(carAppearMinFrames, carAppearMaxFrames));
        x = carStartX;
        carSpeedX = round(random_range(carMinSpeed, carMaxSpeed));
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
